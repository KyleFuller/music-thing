/* This file contains a condensed specification for a logic that has three truth values — true, false, and gappy (neither true nor false) — first-class predicates (i.e. predicates are just ordinary objects), and a nonstandard form of comprehension that has weaker applicability restrictions than standard comprehension but a slightly different form.  We have a strong argument for the claim that the modified comprehension rule does not suffer from paradoxes of self-reference and plan to provide this in another file at some point. */

Truth tables for boolean operators:

    AND:                NOT:
        T G F           T | F
        -----           G | G
    T | T G F           F | T
    G | G G F
    F | F F F

    OR:              IF:              IFF:
        T G F            T G F            T G F
        -----            -----            -----
    T | T T T        T | T G F        T | T G F
    G | T G G        G | T G G        G | G G G
    F | T G F        F | T T T        F | F G T

    IS_GAPLESS:
    T | T
    G | F
    F | T

There is equality.  There are objects and predicates/relations.  Every predicate is an object, any object can be passed to any predicate as an argument, and each predicate can take some n arguments, where n is a non-negative integer.

There is a universal and an existential quantifier.  Each quantifier quantifies over all objects.  ∀x.(ϕ) is true if ϕ is true for every x, false if ϕ is false for at least one x, and gappy otherwise.  ∃x.(ϕ) is false if ϕ is false for every x, true if ϕ is true for at least one x, and gappy otherwise.

Guarded predicate comprehension:
    ⊢ ∃p.(∀x_1...x_n.(IS_GAPLESS(ϕ) → (p(x_1...x_n) ↔ ϕ))),
        where ϕ is a formula not containing IS_GAPLESS.